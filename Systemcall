trace.c:
对trace.c，首先就是调用系统函数trace(int)
trace(int):根据传入的数字，对指定的系统调用进行监视。
然后exec执行trace的后面参数，比如 grep

trace（int）系统调用:
首先需要在user.h里声明这一系统调用，才能在.c里使用。
Makefile调用usys.pl生成usys.S,通过ecall进入kernel，通过a7表明调用哪种系统调用
所以要在usys.pl里加一个trace的入口

ecall进入内核入口程序kernel/syscall.c
首先在syscall.h中定义SYS_trace 22号掉用
在proc结构体里面加一个mask，用于记录监视的系统调用号
然后是sys_trace的具体实现。要在kernel/sysproc.c中去写，其实就是把当前a0放进mask（表明当前系统调用号）（不是很清楚）
写好了实现，然后就是在syscall中声明sys_trace的外部定义,并在函数指针数组新增sys_trace

最后在syscall函数里要输出监视的调用，所以需要添加一个数组，里面放着系统调用号对应的名字。
